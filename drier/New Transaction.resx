<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>